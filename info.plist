<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>com.ay.imageBeautifier</string>
	<key>connections</key>
	<dict>
		<key>06A1BF84-7D11-4901-85C1-D731B8C631E3</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>C22A37A0-4183-4F45-86E1-FCFF471C3173</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>36BE40F3-CB2C-4ABD-A1CF-DE3A67DF7C7F</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>05FFB6E2-C3D8-403F-A328-935BF9E94278</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>8551D5B5-2575-4293-A514-2D1FEB176DA7</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>36BE40F3-CB2C-4ABD-A1CF-DE3A67DF7C7F</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>AAC76CD5-61D3-450C-A0D4-1A4C25939902</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>91F828CE-9EED-4001-B865-98CADFBEBDB0</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>C22A37A0-4183-4F45-86E1-FCFF471C3173</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>05FFB6E2-C3D8-403F-A328-935BF9E94278</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>ay</string>
	<key>description</key>
	<string>beautify the screenshots or images</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>Image beautifier</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>acceptsmulti</key>
				<integer>1</integer>
				<key>filetypes</key>
				<array/>
				<key>name</key>
				<string>图片背景美化（添加圆角和背景色）</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.action</string>
			<key>uid</key>
			<string>8551D5B5-2575-4293-A514-2D1FEB176DA7</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argument</key>
				<string></string>
				<key>passthroughargument</key>
				<false/>
				<key>variables</key>
				<dict>
					<key>files</key>
					<string>{query}</string>
					<key>source</key>
					<string>file</string>
				</dict>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.argument</string>
			<key>uid</key>
			<string>36BE40F3-CB2C-4ABD-A1CF-DE3A67DF7C7F</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string>#!/bin/bash

# Get the absolute path of the Python script
SCRIPT_PATH="beautify_screenshot.py"

# Check if PYTHON_PATHS is set
if [ -z "$PYTHON_PATHS" ]; then
    echo "Error: PYTHON_PATHS environment variable is not set." &gt;&amp;2
    exit 1
fi

# Get the PYTHON_PATHS variable from Alfred (or elsewhere)
IFS=':' read -r -a paths &lt;&lt;&lt; "$PYTHON_PATHS"

# Flag to track if any successful execution occurred
success=false

# Check each path and find the first valid one that executes the script successfully
for path in "${paths[@]}"; do
    if [ -x "$path" ]; then
        # Run the Python script with the valid path
        echo "Trying Python interpreter: $path" &gt;&amp;2

        # Execute the Python script and capture its exit code
        "$path" "$SCRIPT_PATH" $source
        python_exit_code=$?

        # Check if the Python script executed successfully
        if [ $python_exit_code -eq 0 ]; then
            success=true
            echo "Python script executed successfully with: $path" &gt;&amp;2
            exit 0  # Script ran successfully, so exit
        else
            echo "Python script failed with exit code $python_exit_code using interpreter: $path" &gt;&amp;2
            # Continue to the next path in the loop
        fi
    fi
done

# If no valid Python path is found or all executions failed, print an error and exit
if [ "$success" = false ]; then
    echo "Error: No valid Python path found or all Python executions failed." &gt;&amp;2
    exit 1
fi</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>05FFB6E2-C3D8-403F-A328-935BF9E94278</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>keyword</key>
				<string>Beautify screenshot</string>
				<key>subtext</key>
				<string>美化剪贴板上的截图</string>
				<key>text</key>
				<string>Beautify screenshot using python</string>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>06A1BF84-7D11-4901-85C1-D731B8C631E3</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argument</key>
				<string></string>
				<key>passthroughargument</key>
				<false/>
				<key>variables</key>
				<dict>
					<key>source</key>
					<string>clipboard</string>
				</dict>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.argument</string>
			<key>uid</key>
			<string>C22A37A0-4183-4F45-86E1-FCFF471C3173</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string>#!/bin/bash

# Get the absolute path of the Python script
SCRIPT_PATH="torn_edge.py"

# Check if PYTHON_PATHS is set
if [ -z "$PYTHON_PATHS" ]; then
    echo "Error: PYTHON_PATHS environment variable is not set." &gt;&amp;2
    exit 1
fi

# Get the PYTHON_PATHS variable from Alfred (or elsewhere)
IFS=':' read -r -a paths &lt;&lt;&lt; "$PYTHON_PATHS"

# Flag to track if any successful execution occurred
success=false

# Check each path and find the first valid one that executes the script successfully
for path in "${paths[@]}"; do
    if [ -x "$path" ]; then
        # Run the Python script with the valid path
        echo "Trying Python interpreter: $path" &gt;&amp;2

        # Execute the Python script and capture its exit code
        "$path" "$SCRIPT_PATH"
        python_exit_code=$?

        # Check if the Python script executed successfully
        if [ $python_exit_code -eq 0 ]; then
            success=true
            echo "Python script executed successfully with: $path" &gt;&amp;2
            exit 0  # Script ran successfully, so exit
        else
            echo "Python script failed with exit code $python_exit_code using interpreter: $path" &gt;&amp;2
            # Continue to the next path in the loop
        fi
    fi
done

# If no valid Python path is found or all executions failed, print an error and exit
if [ "$success" = false ]; then
    echo "Error: No valid Python path found or all Python executions failed." &gt;&amp;2
    exit 1
fi</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>91F828CE-9EED-4001-B865-98CADFBEBDB0</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>keyword</key>
				<string>torn screenshot</string>
				<key>subtext</key>
				<string>美化剪贴板上的截图：添加撕裂边缘</string>
				<key>text</key>
				<string>add torn to screenshot using python</string>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>AAC76CD5-61D3-450C-A0D4-1A4C25939902</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
	</array>
	<key>readme</key>
	<string>Universal Actions let you take any text, URLs or files and perform actions on them from anywhere on your Mac.

This workflow shares various ways of using Universal Actions:

1. The "Trim text" action will appear in your Actions panel for text-based selections. Choosing it will trim white spaces at the beginning and end of the text you copied. Holding ⌘ (Cmd) while pressing return will take the alternative path, where your text will be uppercased.

In both cases, you then return to Alfred's Actions panel with your newly transformed text.

2. Hotkeys are stripped on import, to ensure that they don't clash with your existing hotkeys, so double-click the object and set your own hotkey. 

Using this hotkey will bring up the Action panel, pre-populated with your clipboard contents.

3. Add Universal Actions as an Alfred Fallback Search result.</string>
	<key>uidata</key>
	<dict>
		<key>05FFB6E2-C3D8-403F-A328-935BF9E94278</key>
		<dict>
			<key>colorindex</key>
			<integer>12</integer>
			<key>xpos</key>
			<real>490</real>
			<key>ypos</key>
			<real>265</real>
		</dict>
		<key>06A1BF84-7D11-4901-85C1-D731B8C631E3</key>
		<dict>
			<key>colorindex</key>
			<integer>12</integer>
			<key>note</key>
			<string>美化剪贴板上的截图，并复制美化图像到剪贴板上</string>
			<key>xpos</key>
			<real>140</real>
			<key>ypos</key>
			<real>265</real>
		</dict>
		<key>36BE40F3-CB2C-4ABD-A1CF-DE3A67DF7C7F</key>
		<dict>
			<key>xpos</key>
			<real>360</real>
			<key>ypos</key>
			<real>145</real>
		</dict>
		<key>8551D5B5-2575-4293-A514-2D1FEB176DA7</key>
		<dict>
			<key>note</key>
			<string>在Finder选择图像文件</string>
			<key>xpos</key>
			<real>105</real>
			<key>ypos</key>
			<real>115</real>
		</dict>
		<key>91F828CE-9EED-4001-B865-98CADFBEBDB0</key>
		<dict>
			<key>colorindex</key>
			<integer>12</integer>
			<key>xpos</key>
			<real>415</real>
			<key>ypos</key>
			<real>475</real>
		</dict>
		<key>AAC76CD5-61D3-450C-A0D4-1A4C25939902</key>
		<dict>
			<key>colorindex</key>
			<integer>12</integer>
			<key>note</key>
			<string>美化剪贴板上的截图，并复制美化图像到剪贴板上</string>
			<key>xpos</key>
			<real>200</real>
			<key>ypos</key>
			<real>475</real>
		</dict>
		<key>C22A37A0-4183-4F45-86E1-FCFF471C3173</key>
		<dict>
			<key>xpos</key>
			<real>355</real>
			<key>ypos</key>
			<real>295</real>
		</dict>
	</dict>
	<key>userconfigurationconfig</key>
	<array/>
	<key>variables</key>
	<dict>
		<key>PYTHON_PATHS</key>
		<string>/Volumes/GEIL2T/Softwares/anaconda3/bin/python:/Users/ay/SoftwareData/anaconda/anaconda3/envs/torch/bin/python:/Users/ay/SoftwareData/anaconda/anaconda3/bin/python:/opt/homebrew/anaconda3/bin/python</string>
	</dict>
	<key>version</key>
	<string>1.1</string>
	<key>webaddress</key>
	<string>https://www.alfredapp.com</string>
</dict>
</plist>
